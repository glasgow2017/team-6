/*
 * This file is generated by jOOQ.
*/
package generated.db;


import generated.db.tables.QuizAnswers;
import generated.db.tables.QuizParticipants;
import generated.db.tables.QuizQuestions;
import generated.db.tables.Users;
import generated.db.tables.records.QuizAnswersRecord;
import generated.db.tables.records.QuizParticipantsRecord;
import generated.db.tables.records.QuizQuestionsRecord;
import generated.db.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>code4good</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<QuizAnswersRecord, Integer> IDENTITY_QUIZ_ANSWERS = Identities0.IDENTITY_QUIZ_ANSWERS;
    public static final Identity<QuizParticipantsRecord, Long> IDENTITY_QUIZ_PARTICIPANTS = Identities0.IDENTITY_QUIZ_PARTICIPANTS;
    public static final Identity<QuizQuestionsRecord, Integer> IDENTITY_QUIZ_QUESTIONS = Identities0.IDENTITY_QUIZ_QUESTIONS;
    public static final Identity<UsersRecord, Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<QuizAnswersRecord> KEY_QUIZ_ANSWERS_PRIMARY = UniqueKeys0.KEY_QUIZ_ANSWERS_PRIMARY;
    public static final UniqueKey<QuizParticipantsRecord> KEY_QUIZ_PARTICIPANTS_PRIMARY = UniqueKeys0.KEY_QUIZ_PARTICIPANTS_PRIMARY;
    public static final UniqueKey<QuizQuestionsRecord> KEY_QUIZ_QUESTIONS_PRIMARY = UniqueKeys0.KEY_QUIZ_QUESTIONS_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<QuizAnswersRecord, Integer> IDENTITY_QUIZ_ANSWERS = createIdentity(QuizAnswers.QUIZ_ANSWERS, QuizAnswers.QUIZ_ANSWERS.ID);
        public static Identity<QuizParticipantsRecord, Long> IDENTITY_QUIZ_PARTICIPANTS = createIdentity(QuizParticipants.QUIZ_PARTICIPANTS, QuizParticipants.QUIZ_PARTICIPANTS.ID);
        public static Identity<QuizQuestionsRecord, Integer> IDENTITY_QUIZ_QUESTIONS = createIdentity(QuizQuestions.QUIZ_QUESTIONS, QuizQuestions.QUIZ_QUESTIONS.ID);
        public static Identity<UsersRecord, Integer> IDENTITY_USERS = createIdentity(Users.USERS, Users.USERS.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<QuizAnswersRecord> KEY_QUIZ_ANSWERS_PRIMARY = createUniqueKey(QuizAnswers.QUIZ_ANSWERS, "KEY_quiz_answers_PRIMARY", QuizAnswers.QUIZ_ANSWERS.ID);
        public static final UniqueKey<QuizParticipantsRecord> KEY_QUIZ_PARTICIPANTS_PRIMARY = createUniqueKey(QuizParticipants.QUIZ_PARTICIPANTS, "KEY_quiz_participants_PRIMARY", QuizParticipants.QUIZ_PARTICIPANTS.ID);
        public static final UniqueKey<QuizQuestionsRecord> KEY_QUIZ_QUESTIONS_PRIMARY = createUniqueKey(QuizQuestions.QUIZ_QUESTIONS, "KEY_quiz_questions_PRIMARY", QuizQuestions.QUIZ_QUESTIONS.ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.ID);
    }
}
