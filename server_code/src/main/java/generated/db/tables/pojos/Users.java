/*
 * This file is generated by jOOQ.
*/
package generated.db.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "users", schema = "code4good")
public class Users implements Serializable {

    private static final long serialVersionUID = 1392058578;

    private final Integer id;
    private final String  name;
    private final String  passwordHash;
    private final String  salt;

    public Users(Users value) {
        this.id = value.id;
        this.name = value.name;
        this.passwordHash = value.passwordHash;
        this.salt = value.salt;
    }

    public Users(
        Integer id,
        String  name,
        String  passwordHash,
        String  salt
    ) {
        this.id = id;
        this.name = name;
        this.passwordHash = passwordHash;
        this.salt = salt;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return this.id;
    }

    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getName() {
        return this.name;
    }

    @Column(name = "password_hash", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getPasswordHash() {
        return this.passwordHash;
    }

    @Column(name = "salt", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getSalt() {
        return this.salt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(passwordHash);
        sb.append(", ").append(salt);

        sb.append(")");
        return sb.toString();
    }
}
