/*
 * This file is generated by jOOQ.
*/
package generated.db.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "quiz_questions", schema = "code4good")
public class QuizQuestions implements Serializable {

    private static final long serialVersionUID = 1685667070;

    private final Integer id;
    private final String  questionText;
    private final String  questionCountry;
    private final String  ans1;
    private final String  ans2;
    private final String  ans3;
    private final String  ans4;
    private final Integer correctAnswer;

    public QuizQuestions(QuizQuestions value) {
        this.id = value.id;
        this.questionText = value.questionText;
        this.questionCountry = value.questionCountry;
        this.ans1 = value.ans1;
        this.ans2 = value.ans2;
        this.ans3 = value.ans3;
        this.ans4 = value.ans4;
        this.correctAnswer = value.correctAnswer;
    }

    public QuizQuestions(
        Integer id,
        String  questionText,
        String  questionCountry,
        String  ans1,
        String  ans2,
        String  ans3,
        String  ans4,
        Integer correctAnswer
    ) {
        this.id = id;
        this.questionText = questionText;
        this.questionCountry = questionCountry;
        this.ans1 = ans1;
        this.ans2 = ans2;
        this.ans3 = ans3;
        this.ans4 = ans4;
        this.correctAnswer = correctAnswer;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return this.id;
    }

    @Column(name = "question_text", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getQuestionText() {
        return this.questionText;
    }

    @Column(name = "question_country", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getQuestionCountry() {
        return this.questionCountry;
    }

    @Column(name = "ans1", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getAns1() {
        return this.ans1;
    }

    @Column(name = "ans2", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getAns2() {
        return this.ans2;
    }

    @Column(name = "ans3", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getAns3() {
        return this.ans3;
    }

    @Column(name = "ans4", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getAns4() {
        return this.ans4;
    }

    @Column(name = "correct_answer", nullable = false, precision = 10)
    @NotNull
    public Integer getCorrectAnswer() {
        return this.correctAnswer;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("QuizQuestions (");

        sb.append(id);
        sb.append(", ").append(questionText);
        sb.append(", ").append(questionCountry);
        sb.append(", ").append(ans1);
        sb.append(", ").append(ans2);
        sb.append(", ").append(ans3);
        sb.append(", ").append(ans4);
        sb.append(", ").append(correctAnswer);

        sb.append(")");
        return sb.toString();
    }
}
