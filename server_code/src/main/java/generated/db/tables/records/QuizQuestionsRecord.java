/*
 * This file is generated by jOOQ.
*/
package generated.db.tables.records;


import generated.db.tables.QuizQuestions;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "quiz_questions", schema = "code4good")
public class QuizQuestionsRecord extends UpdatableRecordImpl<QuizQuestionsRecord> implements Record4<Integer, String, Integer, String> {

    private static final long serialVersionUID = -1644902890;

    /**
     * Setter for <code>code4good.quiz_questions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>code4good.quiz_questions.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>code4good.quiz_questions.question_text</code>.
     */
    public void setQuestionText(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>code4good.quiz_questions.question_text</code>.
     */
    @Column(name = "question_text", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getQuestionText() {
        return (String) get(1);
    }

    /**
     * Setter for <code>code4good.quiz_questions.correct_answer_id</code>.
     */
    public void setCorrectAnswerId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>code4good.quiz_questions.correct_answer_id</code>.
     */
    @Column(name = "correct_answer_id", nullable = false, precision = 10)
    @NotNull
    public Integer getCorrectAnswerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>code4good.quiz_questions.question_country</code>.
     */
    public void setQuestionCountry(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>code4good.quiz_questions.question_country</code>.
     */
    @Column(name = "question_country", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getQuestionCountry() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return QuizQuestions.QUIZ_QUESTIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return QuizQuestions.QUIZ_QUESTIONS.QUESTION_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return QuizQuestions.QUIZ_QUESTIONS.CORRECT_ANSWER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return QuizQuestions.QUIZ_QUESTIONS.QUESTION_COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getQuestionText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCorrectAnswerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getQuestionCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizQuestionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizQuestionsRecord value2(String value) {
        setQuestionText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizQuestionsRecord value3(Integer value) {
        setCorrectAnswerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizQuestionsRecord value4(String value) {
        setQuestionCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizQuestionsRecord values(Integer value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizQuestionsRecord
     */
    public QuizQuestionsRecord() {
        super(QuizQuestions.QUIZ_QUESTIONS);
    }

    /**
     * Create a detached, initialised QuizQuestionsRecord
     */
    public QuizQuestionsRecord(Integer id, String questionText, Integer correctAnswerId, String questionCountry) {
        super(QuizQuestions.QUIZ_QUESTIONS);

        set(0, id);
        set(1, questionText);
        set(2, correctAnswerId);
        set(3, questionCountry);
    }
}
