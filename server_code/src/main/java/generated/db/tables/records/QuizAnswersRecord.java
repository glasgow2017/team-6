/*
 * This file is generated by jOOQ.
*/
package generated.db.tables.records;


import generated.db.tables.QuizAnswers;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "quiz_answers", schema = "code4good")
public class QuizAnswersRecord extends UpdatableRecordImpl<QuizAnswersRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -1097134461;

    /**
     * Setter for <code>code4good.quiz_answers.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>code4good.quiz_answers.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>code4good.quiz_answers.question_id</code>.
     */
    public void setQuestionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>code4good.quiz_answers.question_id</code>.
     */
    @Column(name = "question_id", nullable = false, precision = 10)
    @NotNull
    public Integer getQuestionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>code4good.quiz_answers.answer_text</code>.
     */
    public void setAnswerText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>code4good.quiz_answers.answer_text</code>.
     */
    @Column(name = "answer_text", nullable = false, length = 16777215)
    @NotNull
    @Size(max = 16777215)
    public String getAnswerText() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return QuizAnswers.QUIZ_ANSWERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return QuizAnswers.QUIZ_ANSWERS.QUESTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return QuizAnswers.QUIZ_ANSWERS.ANSWER_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQuestionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAnswerText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizAnswersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizAnswersRecord value2(Integer value) {
        setQuestionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizAnswersRecord value3(String value) {
        setAnswerText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizAnswersRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizAnswersRecord
     */
    public QuizAnswersRecord() {
        super(QuizAnswers.QUIZ_ANSWERS);
    }

    /**
     * Create a detached, initialised QuizAnswersRecord
     */
    public QuizAnswersRecord(Integer id, Integer questionId, String answerText) {
        super(QuizAnswers.QUIZ_ANSWERS);

        set(0, id);
        set(1, questionId);
        set(2, answerText);
    }
}
