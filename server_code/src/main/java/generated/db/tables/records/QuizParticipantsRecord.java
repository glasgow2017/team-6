/*
 * This file is generated by jOOQ.
*/
package generated.db.tables.records;


import generated.db.tables.QuizParticipants;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "quiz_participants", schema = "code4good")
public class QuizParticipantsRecord extends UpdatableRecordImpl<QuizParticipantsRecord> implements Record7<Long, Integer, String, String, String, String, Integer> {

    private static final long serialVersionUID = 521411019;

    /**
     * Setter for <code>code4good.quiz_participants.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>code4good.quiz_participants.age</code>.
     */
    public void setAge(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.age</code>.
     */
    @Column(name = "age", nullable = false, precision = 10)
    @NotNull
    public Integer getAge() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>code4good.quiz_participants.sex</code>.
     */
    public void setSex(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.sex</code>.
     */
    @Column(name = "sex", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getSex() {
        return (String) get(2);
    }

    /**
     * Setter for <code>code4good.quiz_participants.ip</code>.
     */
    public void setIp(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.ip</code>.
     */
    @Column(name = "ip", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getIp() {
        return (String) get(3);
    }

    /**
     * Setter for <code>code4good.quiz_participants.country</code>.
     */
    public void setCountry(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.country</code>.
     */
    @Column(name = "country", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getCountry() {
        return (String) get(4);
    }

    /**
     * Setter for <code>code4good.quiz_participants.quiz_answers</code>.
     */
    public void setQuizAnswers(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.quiz_answers</code>.
     */
    @Column(name = "quiz_answers", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getQuizAnswers() {
        return (String) get(5);
    }

    /**
     * Setter for <code>code4good.quiz_participants.percent_correct_answers</code>.
     */
    public void setPercentCorrectAnswers(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>code4good.quiz_participants.percent_correct_answers</code>.
     */
    @Column(name = "percent_correct_answers", nullable = false, precision = 10)
    @NotNull
    public Integer getPercentCorrectAnswers() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Integer, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Integer, String, String, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return QuizParticipants.QUIZ_PARTICIPANTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return QuizParticipants.QUIZ_PARTICIPANTS.AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return QuizParticipants.QUIZ_PARTICIPANTS.SEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return QuizParticipants.QUIZ_PARTICIPANTS.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return QuizParticipants.QUIZ_PARTICIPANTS.COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return QuizParticipants.QUIZ_PARTICIPANTS.QUIZ_ANSWERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return QuizParticipants.QUIZ_PARTICIPANTS.PERCENT_CORRECT_ANSWERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getQuizAnswers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getPercentCorrectAnswers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value2(Integer value) {
        setAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value3(String value) {
        setSex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value4(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value5(String value) {
        setCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value6(String value) {
        setQuizAnswers(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord value7(Integer value) {
        setPercentCorrectAnswers(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizParticipantsRecord values(Long value1, Integer value2, String value3, String value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizParticipantsRecord
     */
    public QuizParticipantsRecord() {
        super(QuizParticipants.QUIZ_PARTICIPANTS);
    }

    /**
     * Create a detached, initialised QuizParticipantsRecord
     */
    public QuizParticipantsRecord(Long id, Integer age, String sex, String ip, String country, String quizAnswers, Integer percentCorrectAnswers) {
        super(QuizParticipants.QUIZ_PARTICIPANTS);

        set(0, id);
        set(1, age);
        set(2, sex);
        set(3, ip);
        set(4, country);
        set(5, quizAnswers);
        set(6, percentCorrectAnswers);
    }
}
